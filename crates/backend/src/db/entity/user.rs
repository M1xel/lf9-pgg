//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.7

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};
use utoipa::ToSchema;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize, ToSchema)]
#[sea_orm(table_name = "user")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    #[sea_orm(unique)]
    pub username: String,
    pub name: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_one = "super::local_auth::Entity")]
    LocalAuth,
    #[sea_orm(has_many = "super::user_group_project::Entity")]
    UserGroupProject,
}

impl Related<super::local_auth::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::LocalAuth.def()
    }
}

impl Related<super::user_group_project::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserGroupProject.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
